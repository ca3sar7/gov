/**
 * Realiza o bloqueio da abertura do dropdown quando se acessa elemento internos ao mesmo.
 * @param evento O evento de clicar no dropdown.
 */
function bloqueiaDroppdown(evento) {
	if ($(evento.target).hasClass('ajuda')) {
		var conteudoAjuda = evento.target.nextElementSibling;
		$(conteudoAjuda).toggle();
		evento.stopImmediatePropagation();
	} else {
		evento.stopPropagation();
	}
	evento.preventDefault();
}

/**
 * Realiza o bloqueio da funcionalidade de colar para inputs específicos
 * da tela de atualizaçao do e-mail de segurança.
 * 
 *  @param evento O evento de cópia do conteúdo.
 */
function bloqueiaColarConteudo(evento) {
	let id = $(evento.target)[0].id;
	let idsBloqueados = ['emailDeSeguranca', 'emailDeSegurancaConfirma', 'senhaEmailDeSeguranca', 'codigoConfirmaTrocaDeEMailDeSeguranca', 'codigoConfirmaCadastroEMailDeSeguranca'];

	if (idsBloqueados.includes(id)) {
		evento.preventDefault();
	}
}

/**
 * Avisa ao usuário que a tecla CapsLock está ativada quando se está editando um
 * campo do tipo password.
 * 
 * @param evento O evento de acessar o input.
 */
function avisaSobreCapsLock(evento) {
    let estadoAtivado = evento.getModifierState('CapsLock');
    let elemento = '#' + $(evento.target)[0].id;

    if(estadoAtivado) {
        $(elemento).attr('data-original-title', 'A tecla <strong>Caps Lock</strong> está ativada!').tooltip({
        	'placement': 'bottom',
        	'html': true,
        	'trigger': 'focus',
        	'delay': { 'show': 300 }
        }).tooltip('show');
    } else {
        $(elemento).attr('data-original-title','').tooltip('hide');
    }
}

/**
 * Adiciona ao conjunto de inputs do tipo password listeners para observar quando
 * uma tecla é clicada ou o mouse é acionado.
 */
function configuraListenerParaCapsLock() {
	let inputs = document.querySelectorAll('input[type=password]');
	for (let i = 0; i < inputs.length; i++) {
		inputs[i].addEventListener('keyup', avisaSobreCapsLock);
		inputs[i].addEventListener('mousedown', avisaSobreCapsLock);
	}
}

/**
 * Compara a localização da janela com a sua janela originária.
 * <p>
 * @returns True se a janela é independente (pop-up), False se ela está em um iframe. 
 */
function janelaEstaEmFormatoPopUp() {
	return window.location === window.parent.location;
}

/**
 * Fecha a janela atual.
 */
function fecharJanelaMeusDados() {
	window.close();
}

/**
 * Passa para visível o botão Fechar na tela Meus Dados.
 */
function mostraBotaoFechar() {
	let botao = document.getElementById("btnPerfilFechaJanela");
	if (botao) {
		botao.classList.remove('oculto');
	}
}

/**
 * Realiza a função de toogle para a seção de identificação.
 */
function toggleDivIdentificacao(evento) {
	$("#divItensDeIdentificacao").slideToggle("slow");

	if ($("#secIdentificacao").hasClass('collapsed')) {
		$("#secIdentificacao").removeClass('collapsed');
		evento.stopImmediatePropagation();

	} else {
		$("#secIdentificacao").addClass('collapsed');
		evento.stopImmediatePropagation();
	}
	evento.preventDefault();
}

/**
 * Ao clicar no conteúdo do elemento que contém a chave de configuração para
 * 2FA seu valor é copiado para a área de transferência do dispositivo do 
 * usuário. Não há suporte para IE, porém há para o Edge.
 */
function copiaParaAreaDeTransferencia() {
	let msgPerfilValidaCodigo = document.getElementById('msgPerfilValidaCodigo');
	let chaveDeConfiguracao = document.getElementById('chaveDeConfiguracao').innerHTML;
	try {
		navigator.clipboard.writeText(chaveDeConfiguracao).then(function() {
			msgPerfilValidaCodigo.innerHTML = '<span class="INFO">Chave de configuração copiada!</span>';
		}, function() {
			msgPerfilValidaCodigo.innerHTML = '<span class="ERROR">Houve um problema ao copiar a Chave de configuração.</span>';
		});

	} catch (erro) {
		// Em ambientes sem https o clipboard não permite acesso, dessa forma vamos silenciar o erro nesses casos, visto que é
		// possível copiar manualmente o conteúdo da chave de configuração.
	}
}

$(document).ready(function() {
	/**
	 * As capturas de evento abaixo capturam a ação sobre o dropdown menu dos 
	 * botões de ajuda na interface do SOEWeb. Seu efeito é de impedir o fechamento
	 * do elemento quando houver um click de mouse dentro do seu conteúdo e com
	 * isso permitir a interação com o elemento de lista que possui rótulo e 
	 * conteúdo dentro do dropdown.
	 * 
	 * Ocorre diferenciação do comportamento em algumas páginas, em especial, a
	 * primeirca captura faz funcionar corretamente dentro da página do perfil
	 * do usuário (classe 'in' é adicionada, não sei a origem), enquanto a 
	 * segunda no resto da aplicação.
	 */
	// TODO: Investigar por que o componente abaixo está necessitando de dupla chamada.
	$(document).on('click', '.dropdown-menu', function(e) {
		bloqueiaDroppdown(e);
	});
	$('.dropdown-menu').on('click', function(e) {
		bloqueiaDroppdown(e);
	});

    $(document).on('paste', 'input', function(e) {
    	bloqueiaColarConteudo(e);
    });

    /* Hack para IE pois a versão 10 apresenta uma pop up automaticamente para o Caps Lock */
    if (document.msCapsLockWarningOff == false) {
        document.msCapsLockWarningOff = true;
    }

    // Configura os itens necessários para mostrar o aviso de CapsLock para o usuário.
    configuraListenerParaCapsLock();

    // Configuração extra necessária por conta do comportamento gerado no render do JSF para Meus Dados
    $(document).on('focus mouseover', 'input[type=password]', function() {
    	configuraListenerParaCapsLock();
	});

    // Realiza a primeira verificação ao carregar a página
    if (janelaEstaEmFormatoPopUp()) {
    	mostraBotaoFechar();
    }

    // Observa requisições ajax subsequentes (ex. mudança de tela) e atualiza a visibilidade do botão Fechar.
    (function() {
        var origOpen = XMLHttpRequest.prototype.open;
        XMLHttpRequest.prototype.open = function() {
            this.addEventListener('load', function() {
            	if (janelaEstaEmFormatoPopUp()) {
                	mostraBotaoFechar();
                }
            });
            origOpen.apply(this, arguments);
        };
    })();

    // TODO: Investigar por que o componente abaixo está necessitando de dupla chamada.
    // Possivelmente a forma como os conteúdos são inseridos na tela está influenciando o import do bootstrap.
    $(document).on('click', '#secIdentificacao', function(e) {
    	toggleDivIdentificacao(e);
	});

    $('#secIdentificacao').click(function(e){
    	toggleDivIdentificacao(e);
    });
});